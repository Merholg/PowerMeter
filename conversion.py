#!/usr/bin/env python3

import modbus_crc


def conversion(send_sequence, len_recv_sequence_list, timeout):
    """
    Проверяет CRC у принятой последовательности при достижении последней ожидаемых размеров и
    возвращает последовательность без CRC и 0 в коде ошибки
    либо возвращает пустой массив если timeout или ошибка и ненулевой код ошибки
    :param send_sequence: байтовый массив передаваемой последовательности данных
    :param len_recv_sequence_list: спсиок содержащий ожидаемые размеры принимаемой последовательности данных без 2 байт CRC
    :param timeout:
    :return:
    """
    pass


if __name__ == '__main__':
    pass
    """
    Пример:
            Проверить канал связи со счётчиком с сетевым адресом 80h.
            Запрос: 80 00 (CRC)
            Ответ: 80 00 (CRC) Тестирование канала связи прошло успешно.
    Пример:
            Запрос на открытие канала связи со счётчиком с сетевым адресом 80h, уровень доступа 1, пароль 111111.
            Запрос: 80 01 01 31 31 31 31 31 31 (CRC)
            Ответ: 80 00 (CRC)
            Канал связи открыт.
    """
#    print(conversion(bytes([0x80, 0x00, 0x70, 0x60])).hex(' '))  # must be [80 00 60 70]
